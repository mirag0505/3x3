import { Any } from '../Core/Any';

/**
 * Абстрактный класс, описывающий логику игры (GameLogic).
 */
export abstract class AbstractGameLogic extends Any {
    /**
     * Конструктор GameLogic.
     * Постусловие: создан GameLogic.
     */
    constructor() {
      super();
      // Дополнительная инициализация при необходимости
    }
  
    /**
     * Команда.
     * Предусловие: возможно ли это действие (проверка допустимости обмена).
     * Постусловие: применение обмена ячеек (x1,y1) и (x2,y2).
     */
    public abstract applySwap(x1: number, y1: number, x2: number, y2: number): void;
  
    /**
     * Команда.
     * Предусловие: возможно ли это действие (есть выигрышные комбинации).
     * Постусловие: удаление выигрышных комбинаций и начисление очков (можно было бы разделить на две операции).
     */
    public abstract resolveMatches(): void;
  
    /**
     * Команда.
     * Предусловие: возможно ли это (ячейка (x,y) является бонусной).
     * Постусловие: применение (активация) бонуса.
     */
    public abstract activateBonus(x: number, y: number): void;
  
    /**
     * Команда.
     * Предусловие: нет возможных ходов (или другое условие, зависящее от вашей логики).
     * Постусловие: проверка на окончание игры.
     */
    public abstract checkGameOver(): void;
}
  