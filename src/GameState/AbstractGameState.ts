/**
 * Абстрактный класс, описывающий состояние (state) в игре.
 */
export abstract class AbstractGameState {
    /**
     * Конструктор GameState.
     * Постусловие: создана новая state-машина.
     */
    constructor() {
      // Дополнительная инициализация, если нужна
    }
  
    /**
     * Команда.
     * Предусловие: выбранное состояние валидно и переход возможен.
     * Постусловие: стейт машина сменила своё состояние.
     * @param state - название (или идентификатор) желаемого состояния
     */
    public abstract transitionTo(state: string): void;
  
    /**
     * Команда.
     * Предусловие: проверяем, можно ли из одного статуса перейти в другой.
     * (например, запрещено из "инициализации" переходить сразу в "конец игры").
     * Постусловие: меняем текущее состояние на требуемое (если это допустимо).
     * @param action - название (или тип) пользовательского действия
     */
    public abstract handleUserAction(action: string): void;
  
    /**
     * Запрос.
     * Постусловие: получаем текущий статус (string или, возможно, enum).
     */
    public abstract getCurrentState(): string;
  }